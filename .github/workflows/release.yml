name: darts release workflow

on:
  push:
    branches:
      - master

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        python-version: [3.6, 3.7, 3.8]

    steps:
      - name: "1. Clone repository"
        uses: actions/checkout@v2

      - name: "2. Set up Python ${{ matrix.python-version }}"
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: "3. Setup pip"
        run: |
          ./gradlew setupPip

      - name: "4. Attach cache for pip"
        uses: actions/cache@v1
        id: cache
        with:
          path: ~/.cache/pip
          key: tests-${{ runner.os }}-pip-${{ hashFiles('requirements/main.txt', 'requirements/dev.txt') }}
          restore-keys: |
            tests-${{ runner.os }}-pip-

      - name: "5. Tests"
        run: |
          ./gradlew test

  release:
    needs: [tests]
    runs-on: ubuntu-latest
    steps:
      - name: "1. Clone repository"
        uses: actions/checkout@v2
        with:
          fetch-depth: '1'

      - name: "2. Set up Python 3.6"
        uses: actions/setup-python@v1
        with:
          python-version: 3.6

      - name: "3. Update pip"
        run: |
          python -m pip install --upgrade pip

      - name: "4. Attach cache for pip"
        uses: actions/cache@v1
        id: cache
        with:
          path: ~/.cache/pip
          key: release-${{ runner.os }}-pip-${{ hashFiles('requirements/release.txt') }}
          restore-keys: |
            release-${{ runner.os }}-pip-

      - name: "5. Install release dependencies"
        run: |
          pip install -q -r requirements/release.txt

      - name: "6. Determine next version"
        uses: endrjuskr/github-tag-action@master
        id: bump_dry
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INITIAL_VERSION: 0.0.2
          DRY_RUN: true

      - name: "7. Bump version"
        run: |
          bump2version --new-version ${{ steps.bump_dry.outputs.new_tag }} patch

      - name: "8. Commit new version"
        uses: stefanzweifel/git-auto-commit-action@v4.1.6
        with:
          commit_message: Release ${{ steps.bump_dry.outputs.new_tag }}
          branch: master
          commit_user_name: Unit8 Bot
          commit_user_email: info@unit8.co

      - name: "9. Publish new tag"
        uses: endrjuskr/github-tag-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CUSTOM_TAG: ${{steps.bump_dry.outputs.new_tag}}

      - name: "10. Create new release draft"
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.bump_dry.outputs.new_tag }}
          release_name: Release ${{steps.bump_dry.outputs.part}} ${{ steps.bump_dry.outputs.new_tag }}
          draft: true

  deploy-docker:
    needs: [release]
    runs-on: ubuntu-latest
    steps:
      - name: "1. Clone repository"
        uses: actions/checkout@v2

      - name: "2. Determine current version"
        uses: endrjuskr/github-tag-action@master
        id: bump_dry
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DRY_RUN: true

      - name: "3. Determine docker tags"
        run: echo ::set-env name=DOCKER_TAGS::$(echo latest, ${{ steps.bump_dry.outputs.tag }})

      - name: "3-1. Determine docker tags for hotfix"
        if: contains(github.event.head_commit.message, '#hotfix')
        run: echo ::set-env name=DOCKER_TAGS::$(echo ${{ steps.bump_dry.outputs.tag }})

      - name: "4. Build and publish docker to docker hub"
        uses: elgohr/Publish-Docker-Github-Action@2.14
        with:
          name: unit8/darts
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
          tags: "${{ env.DOCKER_TAGS }}"
          cache: true
          buildoptions: "--compress -q"

  deploy-docs:
    runs-on: ubuntu-latest
    needs: [release]
    steps:
      - name: "1. Clone repository"
        uses: actions/checkout@v2

      - name: "2. Set up Python 3.6"
        uses: actions/setup-python@v1
        with:
          python-version: 3.6

      - name: "3. Install pandoc"
        run: |
          sudo apt-get install -y pandoc

      - name: "4. Setup pip"
        run: |
          ./gradlew setupPip

      - name: "5. Attach cache for pip"
        uses: actions/cache@v1
        id: cache
        with:
          path: ~/.cache/pip
          key: release-${{ runner.os }}-pip-${{ hashFiles('requirements/main.txt', 'requirements/release.txt') }}
          restore-keys: |
            release-${{ runner.os }}-pip-

      - name: "6. Build docs"
        run: |
          ./gradlew buildDocs

      - name: "7. Publish documentation to gh-pages"
        uses: s0/git-publish-subdir-action@v2.2.0
        env:
          REPO: self
          BRANCH: gh-pages
          FOLDER: docs/build/html
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
