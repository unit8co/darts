name: darts PR merge workflow

on:
  push:
    branches:
      - master

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        python-version: [3.7, 3.8, 3.9]
        flavour: ['core', 'torch', 'all']

    steps:
      - name: "1. Clone repository"
        uses: actions/checkout@v2

      - name: "2. Set up Python ${{ matrix.python-version }}"
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

        # downloading gradle multiple times in parallel can yield to connection errors
      - name: "3. Cache gradle distribution"
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper/dists
          key: tests-${{ runner.os }}-gradle-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: "3.1 Cache gradle packages"
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: tests-${{ runner.os }}-gradle-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties', 'build.gradle') }}

      - name: "4. Setup pip"
        run: |
          ./gradlew setupPip

      - name: "5. Install libomp (for LightGBM)"
        run: |
          ./.github/scripts/libomp-${{ runner.os }}.sh

      - name: "6. Tests"
        run: |
          ./gradlew "test_${{matrix.flavour}}"

  check-examples:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        example-name: [01-darts-intro.ipynb, 02-multi-time-series-and-covariates.ipynb, 03-data-processing.ipynb, 04-FFT-examples.ipynb, 05-RNN-examples.ipynb]
    steps:
      - name: "1. Clone repository"
        uses: actions/checkout@v2

      - name: "2. Set up Python 3.9"
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      # downloading gradle multiple times in parallel can yield to connection errors
      - name: "3. Cache gradle distribution"
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper/dists
          key: tests-${{ runner.os }}-gradle-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: "3.1 Cache gradle packages"
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: tests-${{ runner.os }}-gradle-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties', 'build.gradle') }}

      # TODO: why is this a matrix? there is no pip caching, and we restart this for each item in the matrix
      - name: "4. Run examples ${{matrix.example-name}}"
        run: |
          ./gradlew checkExample -PexampleName=${{matrix.example-name}}

  docs:
    runs-on: ubuntu-latest

    steps:
      - name: "1. Clone repository"
        uses: actions/checkout@v2

      - name: "2. Set up Python 3.9"
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: "3. Install pandoc"
        run: |
          sudo apt-get install -y pandoc

      # downloading gradle multiple times in parallel can yield to connection errors
      - name: "4. Cache gradle distribution"
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper/dists
          key: tests-${{ runner.os }}-gradle-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: "4.1 Cache gradle packages"
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: tests-${{ runner.os }}-gradle-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties', 'build.gradle') }}

      - name: "5. Setup pip"
        run: |
          ./gradlew setupPip

      - name: "6. Attach cache for pip"
        uses: actions/cache@v1
        id: cache
        with:
          path: ~/.cache/pip
          key: release-${{ runner.os }}-3.9-pip-${{ hashFiles('requirements/core.txt', 'requirements/release.txt') }}

      - name: "7. Build docs"
        run: |
          ./gradlew buildDocs
