name: u8timeseries workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.6
        uses: actions/setup-python@v1
        with:
          python-version: 3.6

      - name: Prepare machine
        run: |
          python -m pip install --upgrade pip

      - uses: actions/cache@v1
        id: cache
        with:
          path: ~/.cache/pip
          key: tests-${{ runner.os }}-pip-${{ hashFiles('requirements/main.txt', 'requirements/dev.txt') }}
          restore-keys: |
            tests-${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          pip install -q .
          pip install -q -r requirements/dev.txt

      - name: Run tests
        run: |
          python -m unittest

      - name: Run linter
        run: |
          flake8 --config=setup.cfg u8timeseries

  docs:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.6
      uses: actions/setup-python@v1
      with:
        python-version: 3.6

    - name: Prepare machine
      run: |
        sudo apt-get install -y pandoc
        python -m pip install --upgrade pip

    - uses: actions/cache@v1
      id: cache
      with:
        path: ~/.cache/pip
        key: docs-${{ runner.os }}-pip-${{ hashFiles('requirements/main.txt', 'requirements/dev.txt') }}
        restore-keys: |
          docs-${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        pip install -q .
        pip install -q -r requirements/dev.txt

    - name: Copy examples
      run: |
        make --directory ./docs copy-examples

    - name: Generate documentation
      run: |
        make --directory ./docs generate
        
    - name: Build documentation website
      run: |
        make --directory ./docs html

    - uses: actions/upload-artifact@v1
      with:
        name: docs
        path: docs/build/html

  deploy-docs:
    needs: [tests, docs]
    runs-on: ubuntu-latest
    if: contains(github.ref, 'master')
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v1
        with:
          name: docs
          path: docs/build/html
      - name: Publish documentation
        uses: s0/git-publish-subdir-action@v2.2.0
        env:
          REPO: self
          BRANCH: gh-pages
          FOLDER: docs/build/html
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-docker:
    needs: [tests, docs]
    runs-on: ubuntu-latest
    if: contains(github.ref, 'master')
    steps:
      - uses: actions/checkout@v2
      - name: Login to gcloud registry
        id: gcloud
        uses: elgohr/gcloud-login-action@0.2
        with:
          account_key: ${{ secrets.GCLOUD_KEY }}
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@2.14
        with:
          name: eu.gcr.io/unit8-product/u8timeseries
          username: ${{ steps.gcloud.outputs.username }}
          password: ${{ steps.gcloud.outputs.password }}
          registry: eu.gcr.io
          tags: "latest"
          cache: true
          buildoptions: "--compress -q"
